#+title:My Dotfiles
#+author:Matthew R Lincoln
#+email:matthew.lincoln@gmail.com

* Introduction
These are my dotfiles, designed for macOS. They are stored in a bare git repository, using the method outlined [[https://www.atlassian.com/git/tutorials/dotfiles][here]]. The bare repository uses =$HOME= as the work tree, so its structure mimics the structure of the home directory.

NOTE: Cloning to a new system can result in git recursion errors. To avoid this, the global =.gitignore= includes the repo folder.

* Setup
To make commits or otherwise manage the repository, we use the alias =dotfiles= in place of =git=. This alias sets =--git-dir=$HOME/.dotfiles/= and =--work-tree=$HOME=, allowing addition of files outside of the core =$HOME/.dotfiles= directory.

To clone to a new system, first define the =dotfiles= alias and ensure that the repo directory is included in the global =.gitignore=:

#+begin_src zsh
alias dotfiles='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
echo ".dotfiles" >> .gitignore
#+end_src

We then clone the dotfiles into a /bare/ repository and check out:

#+begin_src zsh
git clone --bare git@github.com:matthewlincoln/.dotfiles.git $HOME/.dotfiles
dotfiles checkout
#+end_src

We don't want to display untracked files (since the work-tree is =$HOME=):

#+begin_src zsh
dotfiles config --local status.showUntrackedFiles no
#+end_src

Finally, configure to track the main branch:

#+begin_src zsh
mkdir -p ~/.ssh/tmp
dotfiles push --set-upstream origin main
#+end_src

The repository can now be managed with =dotfiles add=, =dotfiles commit= etc.

More details are provided in the original [[https://www.atlassian.com/git/tutorials/dotfiles][post]].

* Contents
The following configuration files are included:

| File                                     | Comment                                                   |
|------------------------------------------+-----------------------------------------------------------|
| .doom.d/                                 | doom-emacs configuration                                  |
| .doom.d/config.el                        |                                                           |
| .doom.d/init.el                          |                                                           |
| .doom.d/packages.el                      |                                                           |
| .latex/                                  | LaTeX header files                                        |
| .latex/author.tex                        | My author details for org-mode export                     |
| .latex/mrl-header-article.tex            | org-mode export header for article class                  |
| .latex/mrl-header-article-letterhead.tex | org-mode export header for article class with letterhead  |
| .latex/mrl-header-article-mssc.tex       | org-mode export header for MS Society of Canada grants    |
| .latex/mrl-header-report.tex             | org-mode export header for report class                   |
| .latex/linespacenums.tex                 | header file to increase line spacing and add line numbers |
| .ssh/config                              | ssh configuration                                         |
| .gitconfig                               | Global git configuration                                  |
| .gitignore                               | Prevent this repository from tracking itself              |
| .mbsyncrc                                | mbsync configuration                                      |
| .zprofile                                | zsh configuration                                         |
| .zshrc                                   | zsh configuration                                         |
| .bash_profile                            | bash configuration                                        |
| .bashrc                                  | bash configuration                                        |
| .config/                                 |                                                           |
| .config/rstudio/rstudio-prefs.json       | RStudio configuration file                                |
| .config/rstudio/Oceanic Next.rstheme     | RStudio theme file                                        |
| .config/rstudio/Nord.rstheme             | RStudio theme file                                        |

* MacOS Configuration Details
It is helpful to set a few [[https://medium.com/swlh/top-mac-os-default-behaviors-you-should-consider-changing-419b679fe290][defaults]]:

#+begin_src zsh
defaults write -g AppleShowAllExtensions -bool true # show all extensions
defaults write com.apple.finder AppleShowAllFiles true # show all files in Finder
defaults write com.apple.finder ShowPathbar -bool true # show path bar in Finder
#+end_src

* Program-Specific Configuration Details
** Emacs
This config assumes the emacs-mac port from [[https://github.com/railwaycat/homebrew-emacsmacport][railwaycat]]:

#+begin_src zsh
brew tap railwaycat/emacsmacport
brew install emacs-mac --with-glib --with-imagemagick --with-natural-title-bar --with-native-comp
#+end_src

Note that we compile with =native-comp= support.

*** doom-emacs
We use the [[https://github.com/doomemacs/doomemacs][Doom Emacs]] configuration framework. We first install dependencies:

#+begin_src zsh
brew install git ripgrep fd
#+end_src

We next clone the Doom repository and install:

#+begin_src zsh
git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d
~/.emacs.d/bin/doom install
#+end_src

To infer title bar colour from the present theme, we need to update Emacs defaults:

#+begin_src zsh
defaults write org.gnu.Emacs TransparentTitleBar DARK
#+end_src

** iTerm2
We use the [[https://www.nordtheme.com][Nord]] colour palette for iTerm2. This is available as an =itermcolors= file from [[https://github.com/arcticicestudio/nord-iterm2/blob/develop/src/xml/Nord.itermcolors][here]].

Previously, we used the [[https://github.com/voronianski/oceanic-next-color-scheme][Oceanic Next]] colour palette, available [[https://github.com/mhartington/oceanic-next-iterm/blob/master/Oceanic-Next.itermcolors][here]].

** Warp
We use the [[https://www.nordtheme.com][Nord]] colour palette for Warp. This is available in a themes repo from the warp developers:

#+begin_src zsh
mkdir -p ~/.warp
cd ~/.warp
git clone https://github.com/warpdotdev/themes.git
#+end_src

To install, restart Warp and set through the Warp > Settings... > Appearance.. menu.

** RStudio
We use the [[https://www.nordtheme.com][Nord]] colour palette for RStudio. This is available as an =rstheme= file from [[https://github.com/edavidaja/nord-rstudio/blob/master/Nord.rstheme][here]].

Previously, we used the [[https://github.com/voronianski/oceanic-next-color-scheme][Oceanic Next]] colour palette. This is available as a =tmTheme= file [[https://github.com/voronianski/oceanic-next-color-scheme/blob/master/Oceanic%20Next.tmTheme][here]]. RStudio converts this on input to an =rstheme= file.

** zsh
We use the [[https://ohmyz.sh/][Oh My Zsh]] configuration framework for zsh. This is installed by running the installer script directly:

#+begin_src zsh
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
#+end_src

This script creates a =~/.oh-my-zsh= folder and replaces the existing =.zshrc=. The old =.zshrc= is stored in =.zshrc.pre-oh-my-zsh=. We copy the contents of this file to the end of the new =.zshrc=.

We additionally use the PowerLevel10K theme for Oh My Zsh. We install this by cloning the theme repository into the existing =~/.oh-my-zsh= folder:

#+begin_src zsh
git clone https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k
#+end_src

This theme is then installed by changing the =ZSH_THEME= variable in =.zshrc=:

#+begin_src zsh
ZSH_THEME="powerlevel10k/powerlevel10k"
#+end_src

The next time we restart the terminal, the PowerLevel10K configuation is run. This can also be be done manually:

#+begin_src zsh
p10k configure
#+end_src

We use the recommended Meslo Nerd Font that has been patched for PowerLevel10K. This is installed by the configuration script, but can also be downloaded [[https://github.com/romkatv/powerlevel10k#meslo-nerd-font-patched-for-powerlevel10k][here]].

Note that complete instructions for this configuration are found [[https://www.josean.com/posts/terminal-setup][here]].
